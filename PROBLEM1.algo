
                    /* SOLUTION WITH ARRAY */


ALGORITHM DistinctNumbers
VAR
    set1 , set2 : ARRAY_OF INTEGER[10]; 
    set3 : ARRAY_OF INTEGER[20];
    i,j  : INTEGER;
    sum  : INTEGER :=0;
    found : BOOLEAN
BEGIN

    Write("Enter first Array");
    Read(set1);
    Write("Enter second Array");
    Read(set2);

    set3: concat(set1, set2);
    FOR i FROM 0 TO set3.length STEP 1  DO
        found := FALSE;
        FOR j FROM 0 TO set3.length STEP 1  DO
            IF (set3[i]=set3[j] && i<>j) THEN
                found=TRUE
            END_IF
        END_FOR
        IF (found=FALSE) THEN
            sum := sum +set3[i];
        END_IF
    END_FOR

    Write(sum);

END

                    /* SOLUTION WITH HASH_TABLE */

ALGORITHM DistinctNumbersHash
VAR
    HashTab : HASH_TABLE<INTEGER,INTEGER>
    set1,set2 : ARRAY_OF INTEGER[10];
    DistTab : ARRAY_OF INTEGER[20];
    i,j :INTEGER;
    count,sum :INTEGER :=0;
BEGIN
    Write("Enter first Array");
    Read(set1);
    Write("Enter second Array");
    Read(set2);

    FOR i FROM 0 TO set1.length STEP 1  DO
        IF ( HashTab.lookup(set1[i]=TRUE) ) THEN
            count :=HashTab.get(set1[i])
            HashTab.insert(set1[i],count+1)
        ELSE
            HashTab.insert(set1[i],1)
        END_IF
    END_FOR

    FOR i FROM 0 TO set2.length STEP 1  DO
        IF ( HashTab.lookup(set2[i]=TRUE) ) THEN
            count :=HashTab.get(set1[i])
            HashTab.insert(set2[i],count+1)
        ELSE
            HashTab.insert(set2[i],1)
        END_IF
    END_FOR

    DistTab := HashTab.getkeys();
    FOR i FROM 0 TO DistinctTab.length STEP 1  DO
        IF ( HashTab.get(DistTab[i])=1 ) THEN
            sum := sum + DistTab[i]
        END_IF
    END_FOR
END